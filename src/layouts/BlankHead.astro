---
const BASE_URL = import.meta.env.BASE_URL;

export interface BlankHeadProps {
    title?: string;
    overrideTitle?: boolean;
    description?: string;
    coverImage?: string | ImageMetadata;
    blockRenders?: string[];
}

const props: BlankHeadProps = Astro.props as BlankHeadProps;

const overrideTitle = props.overrideTitle ?? false;
const title = overrideTitle
    ? props.title
    : props.title
      ? `${props.title} | FuseTim's Blog`
      : "FuseTim's Blog";
const coverImage = props.coverImage
    ? typeof props.coverImage === "string"
        ? props.coverImage
        : props.coverImage.src
    : undefined;
---

<head>
    <meta charset="utf-8" />
    <link rel="icon" type="application/svg" href={`${BASE_URL}favicon.svg`} />
    <link rel="sitemap" href={`${BASE_URL}sitemap-index.xml`} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="color-scheme" content="dark light" />
    <title>{title}</title>
    {
        props.description && (
            <meta name="description" content={props.description} />
        )
    }
    {
        props.blockRenders &&
            props.blockRenders.length > 0 &&
            props.blockRenders.map((block) => (
                <link rel="expect" href={block} blocking="render" />
            ))
    }

    <!-- Canonical URL of the page -->
    <link rel="canonical" href={`${Astro.site}${Astro.url.pathname}`} />

    <!-- Open Graph meta tags -->
    <meta property="og:title" content={title} />
    {
        props.description && (
            <meta property="og:description" content={props.description} />
        )
    }
    <meta property="og:type" content="website" />
    <meta property="og:url" content={`${Astro.site}${Astro.url.pathname}`} />
    {coverImage && <meta property="og:image" content={coverImage} />}

    <!-- Theme Support-->
    <script is:inline>
        const onLoad = () => {
            const savedTheme = localStorage.getItem("uii-theme");
            const preferredColorScheme = window.matchMedia("(prefers-color-scheme: dark)").matches
                    ? "dark"
                    : "light";
            if (savedTheme) {
                document.body.classList.remove("light", "dark");
                document.body.classList.add(savedTheme);
            } else {
                document.body.classList.add(preferredColorScheme);
            }
        };
        document.addEventListener("DOMContentLoaded", onLoad);
    </script>
</head>
